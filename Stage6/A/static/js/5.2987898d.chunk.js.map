{"version":3,"sources":["components/DayCard.js","components/ExpandedDay.js","components/WeekDay.js"],"names":["background","useStyles","makeStyles","card","display","flex","flexDirection","height","minWidth","margin","borderRadius","outline","cardContent","width","cardImage","justifyContent","cardImageBackground0","backgroundImage","cardImageBackground1","cardImageBackground2","cardImageBackground3","icon","fontSize","avatar","backgroundColor","marginBottom","typography","marginTop","divider","setCardFocus","e","scroller","target","closest","tab","scrollLeft","offsetLeft","offsetWidth","MealCard","memo","day","meal","classes","index","MEALS","indexOf","Card","className","onFocus","tabIndex","role","raised","CardContent","Paper","elevation","Avatar","Typography","gutterBottom","variant","toUpperCase","substr","toLowerCase","Divider","Zoom","in","timeout","style","transitionDelay","LazyChipWrapper","clickable","color","label","TIME","List","type","getTabsStyle","theme","flexContainer","alignItems","root","scrollBehavior","breakpoints","down","scrollButtonsDesktop","position","padding","zIndex","left","right","paddingTop","ExpandedDay","tabClasses","tabsDomRef","useRef","Tabs","indicatorColor","textColor","scrollButtons","value","ref","TabScrollButtonProps","onClick","tabsdiv","current","querySelectorAll","tabList","querySelector","parentNode","firstVisibleLeftOffset","scrollerLeft","scrollerWidth","child","lastVisibleLeftOffset","map","m","ind","getAccordionStyle","overflow","expanded","accordionSummary","marginLeft","paper","Weekday","React","useState","open","setOpen","accordionClasses","id","Accordion","TransitionProps","unmountOnExit","square","onChange","AccordionSummary","expandIcon","substring","AccordionDetails"],"mappings":"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","file":"static/js/5.2987898d.chunk.js","sourcesContent":["import {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Paper,\r\n  Typography,\r\n  Zoom,\r\n} from \"@material-ui/core\";\r\n\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { memo } from \"react\";\r\nimport { MEALS, TIME, WEEKDAYS } from \"../constants/Constants\";\r\nimport ListComp from \"../components/List/List\";\r\nimport LazyChipWrapper from \"../helper/Chip/LazyChipWrapper\";\r\nimport {\r\n  BreakfastIcon,\r\n  LunchIcon,\r\n  SnacksIcon,\r\n  DinnerIcon,\r\n} from \"../helper/LazyIcons\";\r\nimport { StyledChip } from \"../helper/Chip/LazyChip\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst background = [\r\n  `linear-gradient(to bottom, #ff5722, rgb(222 178 113 / 46%))`,\r\n  `linear-gradient(#8bc34a, rgb(164 215 166 / 40%))`,\r\n  `linear-gradient(#ff9800, rgb(219 212 151 / 41%))`,\r\n  `linear-gradient(#673ab7, rgb(159 131 207 / 45%))`,\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    display: \"flex\",\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    height: \"400px\",\r\n    minWidth: \"min(400px , 87% )\",\r\n    margin: \"20px\",\r\n    // marginLeft: \"0px\",\r\n    borderRadius: \"30px 30px 30px 30px\",\r\n    \"&:focus-within\": {\r\n      height: \"440px\",\r\n      outline: \"unset\",\r\n    },\r\n  },\r\n\r\n  cardContent: {\r\n    width: \"100%\",\r\n    // flex: 5,\r\n    // paddingLeft: \"5%\",\r\n  },\r\n\r\n  cardImage: {\r\n    height: \"28%\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    borderRadius: \"0px 0px 20px 20px\",\r\n    flexDirection: \"column\",\r\n  },\r\n\r\n  cardImageBackground0: {\r\n    backgroundImage: background[0],\r\n  },\r\n  cardImageBackground1: {\r\n    backgroundImage: background[1],\r\n  },\r\n  cardImageBackground2: {\r\n    backgroundImage: background[2],\r\n  },\r\n  cardImageBackground3: {\r\n    backgroundImage: background[3],\r\n  },\r\n  icon: { fontSize: \"2.7rem\" },\r\n  avatar: {\r\n    backgroundColor: \"white\",\r\n    marginBottom: \"-25px\",\r\n    height: \"61px\",\r\n    width: \"70px\",\r\n  },\r\n  typography: {\r\n    marginTop: \"25px\",\r\n  },\r\n  divider: {\r\n    marginBottom: \"10px\",\r\n  },\r\n});\r\n\r\nfunction setCardFocus(e) {\r\n  // Only focus for tab elements\r\n  /*   e.target.closest(\".MuiTabs-scroller.MuiTabs-scrollable\").scrollLeft =\r\n    e.target.closest('div[role=\"tab\"]').offsetLeft - 20; */\r\n  const scroller = e.target.closest(\".MuiTabs-scroller.MuiTabs-scrollable\");\r\n  const tab = e.target.closest('[role=\"tab\"]');\r\n  if (scroller.scrollLeft > tab.offsetLeft - 15)\r\n    scroller.scrollLeft = tab.offsetLeft - 15;\r\n  else if (\r\n    scroller.scrollLeft + scroller.offsetWidth <\r\n    tab.offsetLeft + 15 + tab.offsetWidth\r\n  )\r\n    scroller.scrollLeft =\r\n      -scroller.offsetWidth + tab.offsetLeft + tab.offsetWidth + 15;\r\n}\r\n\r\nconst MealCard = memo(function MealCard({ day, meal }) {\r\n  const classes = useStyles();\r\n\r\n  const index = MEALS.indexOf(meal);\r\n\r\n  return (\r\n    <Card\r\n      className={classes.card}\r\n      onFocus={setCardFocus}\r\n      tabIndex={1}\r\n      role=\"tab\"\r\n      raised\r\n    >\r\n      <CardContent className={classes.cardContent}>\r\n        <Paper\r\n          elevation={0}\r\n          className={`${classes.cardImage} ${\r\n            classes[\"cardImageBackground\" + index]\r\n          }`}\r\n        >\r\n          <Avatar className={classes.avatar}>\r\n            {index === 0 ? (\r\n              <BreakfastIcon className={classes.icon} fontSize=\"large\" />\r\n            ) : index === 1 ? (\r\n              <LunchIcon className={classes.icon} fontSize=\"large\" />\r\n            ) : index === 2 ? (\r\n              <SnacksIcon className={classes.icon} fontSize=\"large\" />\r\n            ) : (\r\n              <DinnerIcon className={classes.icon} fontSize=\"large\" />\r\n            )}\r\n          </Avatar>\r\n        </Paper>\r\n        <Typography className={classes.typography} gutterBottom variant=\"h5\">\r\n          {MEALS[index][0].toUpperCase() + MEALS[index].substr(1).toLowerCase()}\r\n        </Typography>\r\n\r\n        <Divider className={classes.divider} />\r\n        <Zoom in={true} timeout={1200} style={{ transitionDelay: \"300ms\" }}>\r\n          <LazyChipWrapper>\r\n            <StyledChip\r\n              clickable\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              icon={<ScheduleIcon />}\r\n              label={TIME[index]}\r\n            />\r\n          </LazyChipWrapper>\r\n        </Zoom>\r\n\r\n        <ListComp type=\"weekday\" day={day} meal={meal}></ListComp>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n});\r\n\r\nMealCard.propTypes = {\r\n  day: PropTypes.oneOf(WEEKDAYS).isRequired,\r\n  meal: PropTypes.oneOf(MEALS).isRequired,\r\n};\r\n\r\nexport default MealCard;\r\n","import { Tabs } from \"@material-ui/core\";\r\nimport { useRef } from \"react\";\r\nimport { MEALS } from \"../constants/Constants\";\r\nimport MealCard from \"./DayCard\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst getTabsStyle = makeStyles((theme) => ({\r\n  flexContainer: {\r\n    alignItems: \"center\",\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  scroller: {\r\n    scrollBehavior: \"smooth\",\r\n  },\r\n  [theme.breakpoints.down(\"xs\")]: {\r\n    scrollButtonsDesktop: {\r\n      display: \"flex\",\r\n      position: \"absolute\",\r\n      padding: \"10px\",\r\n      zIndex: \"2\",\r\n      \"&:first-of-type\": {\r\n        left: \"10px\",\r\n      },\r\n      \"&:last-of-type\": {\r\n        right: \"10px\",\r\n      },\r\n    },\r\n    scroller: {\r\n      paddingTop: \"10px\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ExpandedDay({ day }) {\r\n  const tabClasses = getTabsStyle();\r\n\r\n  const tabsDomRef = useRef(null);\r\n\r\n  function handleScrollButtonClick(e) {\r\n    const tabsdiv = tabsDomRef.current;\r\n    const scrollButtons = tabsdiv.querySelectorAll(\"[role=ScrollButton]\");\r\n    const tabList = tabsdiv.querySelectorAll(\"[role=tab]\");\r\n    const scroller = tabsdiv.querySelector(\"[role=tablist]\").parentNode;\r\n\r\n    if (tabList && scroller && scrollButtons) {\r\n      // Check for left Button\r\n      if (scrollButtons[0] === e.target.closest(\"[role=ScrollButton]\")) {\r\n        let firstVisibleLeftOffset = 0;\r\n        const scrollerLeft = scroller.scrollLeft;\r\n        const scrollerWidth = scroller.offsetWidth;\r\n        for (const child of tabList) {\r\n          if (child.offsetLeft > scrollerLeft) {\r\n            firstVisibleLeftOffset = child.offsetLeft;\r\n            break;\r\n          }\r\n        }\r\n        scroller.scrollLeft = firstVisibleLeftOffset - scrollerWidth - 20;\r\n      } else {\r\n        let lastVisibleLeftOffset = 0;\r\n        const scrollerLeft = scroller.scrollLeft;\r\n        const scrollerWidth = scroller.offsetWidth;\r\n        for (const child of tabList) {\r\n          if (\r\n            child.offsetLeft + child.offsetWidth >\r\n            scrollerLeft + scrollerWidth\r\n          ) {\r\n            lastVisibleLeftOffset = child.offsetLeft;\r\n            break;\r\n          }\r\n        }\r\n        scroller.scrollLeft = lastVisibleLeftOffset - 20;\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Tabs\r\n      indicatorColor=\"secondary\"\r\n      classes={tabClasses}\r\n      textColor=\"primary\"\r\n      variant=\"scrollable\"\r\n      scrollButtons=\"auto\"\r\n      value={false}\r\n      ref={tabsDomRef}\r\n      TabScrollButtonProps={{\r\n        onClick: handleScrollButtonClick,\r\n        role: \"ScrollButton\",\r\n      }}\r\n    >\r\n      {MEALS.map((m, ind) => {\r\n        return <MealCard key={m} day={day} meal={m} />;\r\n      })}\r\n    </Tabs>\r\n  );\r\n}\r\n","import React, { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Divider,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpandedDay from \"./ExpandedDay\";\r\nimport { WEEKDAYS } from \"../constants/Constants\";\r\n\r\nconst getAccordionStyle = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    margin: \"auto\",\r\n    borderRadius: \"9px\",\r\n    overflow: \"hidden\",\r\n  },\r\n  expanded: {\r\n    borderRadius: \"39px\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  accordionSummary: {\r\n    backgroundColor: \"antiquewhite\",\r\n    // backgroundImage: `linear-gradient(to right, #00bcd4, #bbe0f042)`,\r\n    backgroundImage: \"linear-gradient(to right, #e9dd71, #e7dd87c4)\",\r\n  },\r\n  typography: {\r\n    marginLeft: \"30px\",\r\n  },\r\n  paper: {\r\n    marginBottom: \"20px\",\r\n    background: \"transparent\",\r\n  },\r\n}));\r\n\r\nconst Weekday = memo(function Weekday({ day }) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const accordionClasses = getAccordionStyle();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper elevation={0} id={day} className={classes.paper}>\r\n      <Accordion\r\n        TransitionProps={{ unmountOnExit: true }}\r\n        square={true}\r\n        classes={accordionClasses}\r\n        expanded={open}\r\n        onChange={(e, open) => {\r\n          setOpen(open);\r\n        }}\r\n      >\r\n        <AccordionSummary\r\n          className={classes.accordionSummary}\r\n          expandIcon={<ExpandMoreIcon />}\r\n        >\r\n          <Typography className={classes.typography} variant=\"h4\">\r\n            {day[0].toUpperCase() + day.substring(1)}\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <Divider />\r\n\r\n        <AccordionDetails>\r\n          <ExpandedDay day={day} />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </Paper>\r\n  );\r\n}); //Rerender the day only if any update has happened to any of its props\r\nWeekday.propTypes = {\r\n  day: PropTypes.oneOf(WEEKDAYS).isRequired,\r\n};\r\n\r\nexport default Weekday;\r\n"],"sourceRoot":""}